name: Deploy Vibesbox Worker
description: Deploy the vibesbox iframe isolation worker to Cloudflare

inputs:
  environment:
    description: "Environment to deploy to (production, staging)"
    required: true
    default: "production"
  worker_name:
    description: "Name of the worker to deploy to"
    required: false
    default: "vibesbox"
  CLOUDFLARE_API_TOKEN:
    description: "Cloudflare API token for deployment"
    required: true
  CLOUDFLARE_ACCOUNT_ID:
    description: "Cloudflare account ID"
    required: true

runs:
  using: composite
  steps:
    - name: Install dependencies
      shell: bash
      run: pnpm install

    - name: Run vibesbox CI checks
      shell: bash
      run: |
        echo "🏗️ Running vibesbox CI checks..."
        pnpm vibesbox:check

    - name: Deploy to Cloudflare Workers
      shell: bash
      run: |
        cd vibesbox/pkg
        echo "🚀 Deploying ${{ inputs.worker_name }} worker..."

        if [[ "${{ inputs.environment }}" == "staging" ]]; then
          echo "📦 Deploying to staging environment..."
          npx wrangler deploy --env staging
        else
          echo "🚀 Deploying to production..."
          npx wrangler deploy
        fi

        echo "✅ Worker deployed successfully"
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}

    - name: Deployment summary
      shell: bash
      run: |
        echo ""
        echo "🎉 Deployment Summary"
        echo "===================="
        echo "✅ Worker: ${{ inputs.worker_name }}"
        echo "📦 Environment: ${{ inputs.environment }}"
        echo ""
        if [[ "${{ inputs.environment }}" == "production" ]]; then
          echo "🌐 URLs:"
          echo "   - https://vibesbox.dev"
          echo "   - https://*.vibesbox.dev"
        else
          echo "🌐 Staging URL: https://vibesbox-staging.workers.dev"
        fi
        echo ""
        echo "📝 Next Steps:"
        echo "1. Test the iframe isolation at the URLs above"
        echo "2. Verify postMessage communication works"
        echo "3. Check that Fireproof version parameter works"
        echo "4. Monitor for any CORS or security issues"
